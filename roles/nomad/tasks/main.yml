---

- include: cni.yml
  when: enable_cni

- name: download nomad
  get_url:
    url: "{{ url }}"
    dest: /root

- name: install
  unarchive:
    src: "/root/{{ package }}"
    dest: /usr/local/bin
    remote_src: yes

- name: make sure /etc/nomad exists
  file: path=/etc/nomad state=directory

- name: install systemd unit
  copy:
    src: nomad.service
    dest: /etc/systemd/system/nomad.service
  notify: systemd_reload

# - name: install tls ca
#   copy:
#     content: "{{ nomad_ca }}"
#     dest: /etc/nomad/ca.pem
#   notify: restart_nomad
# 
# - name: install tls server cert
#   when: nomad.server
#   copy:
#     content: "{{ nomad_server_cert }}"
#     dest: /etc/nomad/server.pem
#   notify: restart_nomad
# 
# - name: install tls server key
#   when: nomad.server
#   copy:
#     content: "{{ nomad_server_key }}"
#     dest: /etc/nomad/server-key.pem
#   notify: restart_nomad
# 
# - name: install tls client cert
#   when: not nomad.server
#   copy:
#     content: "{{ nomad_client_cert }}"
#     dest: /etc/nomad/client.pem
#   notify: restart_nomad
# 
# - name: install tls client key
#   when: not nomad.server
#   copy:
#     content: "{{ nomad_client_key }}"
#     dest: /etc/nomad/client-key.pem
#   notify: restart_nomad

- name: Calculate nomad_cpu_total_compute for amd64
  shell:decode -t 4 |awk '/Current Speed/ {s=$3} /Core Enabled/ {c=$3} END {print s*c}' 
  register: cpu_total_compute
  when: nomad_architecture == 'arm64'

- name: Set nomad_cpu_total_compute from calculated value
  set_fact:
    nomad_cpu_total_compute: "{{ cpu_total_compute.stdout }}"
  when: cpu_total_compute is defined

- name: install agent config
  template:
    src=nomad.hcl.j2
    dest=/etc/nomad/nomad.hcl
  notify: restart_nomad

- name: enable service
  service: name=nomad state=started enabled=yes
